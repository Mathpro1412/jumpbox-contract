name: "production"

on:
  push:
    branches: [ "main" ]
env:
    GITHUB_PR_NUMBER: ${{github.event.pull_request.number}}
jobs:
    retag:
        env:
          APP_IMAGE: ${{ vars.APP_IMAGE }}
        runs-on: ubuntu-latest
        permissions:
          contents: write
        defaults:
            run:
              working-directory: ./hand-on # Here the path to the folder where package-lock.json is located.
        steps:
        - name: Checkout
          uses: actions/checkout@v3
        - name: pwd 0
          run: pwd
        - name: Get Image Name & Tag
          id: get_image_name
          uses: mikefarah/yq@master
          with:
            cmd: yq -r '.spec.template.spec.containers.[0].image' hand-on/manifest/develop/deployment.yaml
        - name : Get YQ Result
          run: |
            echo ${{ steps.get_image_name.outputs.result }}
        - name : docker retag
          run: |
              docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
              docker pull ${{ steps.get_image_name.outputs.result }}
              echo "-----------------"
              docker images
              echo "-----------------"
              docker tag ${{ steps.get_image_name.outputs.result }} ${{ secrets.DOCKERHUB_USERNAME }}/nodejs-api:latest
              docker images
              echo "-----------------"
              docker push ${{ secrets.DOCKERHUB_USERNAME }}/nodejs-api:latest
              echo "-----------------"              
              echo "docker retag success"
        - name: Change production name
          id: get_username
          uses: mikefarah/yq@master
          with:
            cmd: yq -i '.spec.template.spec.containers.[0].image = "${{ secrets.DOCKERHUB_USERNAME }}/nodejs-api:latest"' hand-on/manifest/production/deployment.yaml
        - name: update dev manifest
          run: |
            git config user.name "GitHub Action"
            git config user.email "github-actions@users.noreply.github.com"
            git add manifest/production/*
            git commit -m "bot: Update manifest"
            git push
        - name: start minikube
          id: minikube
          uses: medyagh/setup-minikube@master
        - name: deploy app in minikube
          run: |
            cd manifest
            cd production
            kubectl apply -f deployment.yaml